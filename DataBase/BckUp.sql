-- MySQL Script generated by MySQL Workbench
-- Mon Feb 19 13:54:53 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
SHOW WARNINGS;
-- -----------------------------------------------------
-- Schema drug_project_cdac
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `drug_project_cdac` ;

-- -----------------------------------------------------
-- Schema drug_project_cdac
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `drug_project_cdac` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
SHOW WARNINGS;
USE `drug_project_cdac` ;

-- -----------------------------------------------------
-- Table `address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `address` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `address` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `street_address` VARCHAR(255) NOT NULL,
  `city` VARCHAR(255) NOT NULL,
  `state` VARCHAR(255) NOT NULL,
  `zip_code` VARCHAR(20) NOT NULL,
  `pharmacist_id` INT NOT NULL,
  PRIMARY KEY (`address_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 36
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `bill_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bill_table` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `bill_table` (
  `bill_id` INT NOT NULL AUTO_INCREMENT,
  `Order_id` INT NOT NULL,
  `pharmacist_id` INT NOT NULL,
  `Pharmacist_Name` VARCHAR(250) NOT NULL,
  `medicine_id` INT NOT NULL,
  `Quantity` INT NOT NULL,
  `Total_Amount` DOUBLE NOT NULL,
  `Discount_price` INT NOT NULL,
  `Discounted_price` INT NOT NULL,
  `To_Pay_Amount` INT NOT NULL,
  `Billing_Date` DATETIME NOT NULL,
  PRIMARY KEY (`bill_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `cart_medicine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cart_medicine` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `cart_medicine` (
  `cart_id` INT NOT NULL AUTO_INCREMENT,
  `pharmacist_id` INT NOT NULL,
  `medicine_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`cart_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `distributor_db`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `distributor_db` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `distributor_db` (
  `Distributor_ID` INT NOT NULL AUTO_INCREMENT,
  `distributor_name` VARCHAR(255) NOT NULL,
  `distributorEmail` VARCHAR(250) NOT NULL,
  `Password` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`Distributor_ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;
CREATE UNIQUE INDEX `Distributor_ID_UNIQUE` ON `distributor_db` (`Distributor_ID` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `medicine_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `medicine_category` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `medicine_category` (
  `Category_id` INT NOT NULL AUTO_INCREMENT,
  `Category_Name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`Category_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `medicine_db`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `medicine_db` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `medicine_db` (
  `Medicine_id` INT NOT NULL AUTO_INCREMENT,
  `Medicine_name` VARCHAR(250) NOT NULL,
  `Category_id` INT NOT NULL,
  `Medicine_Quantity` INT NOT NULL,
  `Manufacture_date` DATE NOT NULL,
  `Unit_Price` INT NOT NULL,
  PRIMARY KEY (`Medicine_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 730
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `order_db`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `order_db` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `order_db` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `Medicine_id` INT NOT NULL,
  `pharmacist_id` INT NOT NULL,
  `Price` DOUBLE NOT NULL,
  `ShippingAddress_id` INT NOT NULL,
  `Order_Date` DATETIME NOT NULL,
  `Delivery_Date` DATETIME NOT NULL,
  `bill_id` INT NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `created_at` DATE NOT NULL,
  PRIMARY KEY (`order_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `order_medicine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `order_medicine` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `order_medicine` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `medicine_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`order_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pharmacist_db`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pharmacist_db` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pharmacist_db` (
  `pharmacist_id` INT NOT NULL AUTO_INCREMENT,
  `pharmacist_name` VARCHAR(250) NOT NULL,
  `License_Number` VARCHAR(255) NOT NULL,
  `pharmacist_Email` VARCHAR(150) NOT NULL,
  `Address` VARCHAR(255) NOT NULL,
  `Password` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`pharmacist_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 56
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

SHOW WARNINGS;
CREATE UNIQUE INDEX `lnu` ON `pharmacist_db` (`License_Number` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `peu` ON `pharmacist_db` (`pharmacist_Email` ASC) VISIBLE;

SHOW WARNINGS;
USE `drug_project_cdac` ;

-- -----------------------------------------------------
-- procedure DeleteSingleBillData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleBillData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleBillData`(IN _bill_id INT)
BEGIN
    DELETE FROM bill_table WHERE bill_id = _bill_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure DeleteSingleCartMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleCartMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleCartMedicineData`(IN _id INT)
BEGIN
    DELETE FROM cart_medicine WHERE id = _id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure DeleteSingleDistributorData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleDistributorData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleDistributorData`(IN _Distributor_ID INT)
BEGIN
    DELETE FROM distributor_db WHERE Distributor_ID = _Distributor_ID;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure DeleteSingleMedicineCategoryData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleMedicineCategoryData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleMedicineCategoryData`(IN _Category_id INT)
BEGIN
    DELETE FROM medicine_category WHERE Category_id = _Category_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure DeleteSingleMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleMedicineData`(IN _Medicine_id INT)
BEGIN
    DELETE FROM medicine_db WHERE Medicine_id = _Medicine_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure DeleteSingleOrderData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `DeleteSingleOrderData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `DeleteSingleOrderData`(IN _order_id INT)
BEGIN
    DELETE FROM order_db WHERE order_id = _order_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllBillData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllBillData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllBillData`()
BEGIN
    SELECT * FROM bill_table;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllCartMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllCartMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllCartMedicineData`()
BEGIN
    SELECT * FROM cart_medicine;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllDistributorData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllDistributorData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllDistributorData`()
BEGIN
    SELECT * FROM distributor_db;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllMedicineCategoryData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllMedicineCategoryData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllMedicineCategoryData`()
BEGIN
    SELECT * FROM medicine_category;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllMedicineData`()
BEGIN
    SELECT * FROM medicine_db;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetAllOrderData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetAllOrderData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllOrderData`()
BEGIN
    SELECT * FROM order_db;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleBillData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleBillData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleBillData`(IN _bill_id INT)
BEGIN
    SELECT * FROM bill_table WHERE bill_id = _bill_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleCartMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleCartMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleCartMedicineData`(IN _id INT)
BEGIN
    SELECT * FROM cart_medicine WHERE id = _id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleDistributorData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleDistributorData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleDistributorData`(IN _Distributor_ID INT)
BEGIN
    SELECT * FROM distributor_db WHERE Distributor_ID = _Distributor_ID;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleMedicineCategoryData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleMedicineCategoryData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleMedicineCategoryData`(IN _Category_id INT)
BEGIN
    SELECT * FROM medicine_category WHERE Category_id = _Category_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleMedicineData`(IN _Medicine_id INT)
BEGIN
    SELECT * FROM medicine_db WHERE Medicine_id = _Medicine_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSingleOrderData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSingleOrderData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSingleOrderData`(IN _order_id INT)
BEGIN
    SELECT * FROM order_db WHERE order_id = _order_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure GetSinglePharmacistData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `GetSinglePharmacistData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetSinglePharmacistData`(IN _p_id INT)
BEGIN
    SELECT * FROM pharmacist_db WHERE p_id = _p_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewBillData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewBillData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewBillData`(IN _Order_id INT, IN _Meds_id INT, IN _Pharmas_id INT, IN _Medicine_name VARCHAR(250), IN _Pharmacist_Name VARCHAR(250), IN _Quantity INT, IN _Total_Amount DOUBLE, IN _Discount_price INT, IN _Discounted_price INT, IN _To_Pay_Amount INT, IN _Billing_Date DATETIME)
BEGIN
    INSERT INTO bill_table (Order_id, Meds_id, Pharmas_id, Medicine_name, Pharmacist_Name, Quantity, Total_Amount, Discount_price, Discounted_price, To_Pay_Amount, Billing_Date)
    VALUES (_Order_id, _Meds_id, _Pharmas_id, _Medicine_name, _Pharmacist_Name, _Quantity, _Total_Amount, _Discount_price, _Discounted_price, _To_Pay_Amount, _Billing_Date);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewCartMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewCartMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewCartMedicineData`(IN _pharmacist_id INT, IN _medicine_id INT, IN _quantity INT)
BEGIN
    INSERT INTO cart_medicine (pharmacist_id, medicine_id, quantity)
    VALUES (_pharmacist_id, _medicine_id, _quantity);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewDistributorData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewDistributorData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewDistributorData`(IN _distributor_name VARCHAR(255), IN _Distributor_Email VARCHAR(250), IN _Password VARCHAR(250))
BEGIN
    INSERT INTO distributor_db (distributor_name, Distributor_Email, Password)
    VALUES (_distributor_name, _Distributor_Email, _Password);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewMedicineCategoryData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewMedicineCategoryData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewMedicineCategoryData`(IN _Category_Name VARCHAR(255))
BEGIN
    INSERT INTO medicine_category (Category_Name)
    VALUES (_Category_Name);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewMedicineData`(IN _Medicine_name VARCHAR(250), IN _Category_id INT, IN _Medicine_Quantity INT, IN _Manufacture_date DATE, IN _Unit_Price INT)
BEGIN
    INSERT INTO medicine_db (Medicine_name, Category_id, Medicine_Quantity, Manufacture_date, Unit_Price)
    VALUES (_Medicine_name, _Category_id, _Medicine_Quantity, _Manufacture_date, _Unit_Price);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure InsertNewOrderData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `InsertNewOrderData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `InsertNewOrderData`(IN _meds_id INT, IN _pharms_id INT, IN _pharmacist_name VARCHAR(250), IN _Medicine_Name VARCHAR(250), IN _Price DOUBLE, IN _Order_Date DATETIME)
BEGIN
    INSERT INTO order_db (meds_id, pharms_id, pharmacist_name, Medicine_Name, Price, Order_Date)
    VALUES (_meds_id, _pharms_id, _pharmacist_name, _Medicine_Name, _Price, _Order_Date);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateBillData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateBillData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateBillData`(IN _bill_id INT, IN _Order_id INT, IN _Meds_id INT, IN _Pharmas_id INT, IN _Medicine_name VARCHAR(250), IN _Pharmacist_Name VARCHAR(250), IN _Quantity INT, IN _Total_Amount DOUBLE, IN _Discount_price INT, IN _Discounted_price INT, IN _To_Pay_Amount INT, IN _Billing_Date DATETIME)
BEGIN
    UPDATE bill_table 
    SET Order_id = _Order_id, Meds_id = _Meds_id, Pharmas_id = _Pharmas_id, Medicine_name = _Medicine_name, Pharmacist_Name = _Pharmacist_Name, Quantity = _Quantity, Total_Amount = _Total_Amount, Discount_price = _Discount_price, Discounted_price = _Discounted_price, To_Pay_Amount = _To_Pay_Amount, Billing_Date = _Billing_Date
    WHERE bill_id = _bill_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateCartMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateCartMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateCartMedicineData`(IN _id INT, IN _pharmacist_id INT, IN _medicine_id INT, IN _quantity INT)
BEGIN
    UPDATE cart_medicine 
    SET pharmacist_id = _pharmacist_id, medicine_id = _medicine_id, quantity = _quantity
    WHERE id = _id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateDistributorData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateDistributorData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateDistributorData`(IN _Distributor_ID INT, IN _distributor_name VARCHAR(255), IN _Distributor_Email VARCHAR(250), IN _Password VARCHAR(250))
BEGIN
    UPDATE distributor_db 
    SET distributor_name = _distributor_name, Distributor_Email = _Distributor_Email, Password = _Password
    WHERE Distributor_ID = _Distributor_ID;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateMedicineCategoryData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateMedicineCategoryData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateMedicineCategoryData`(IN _Category_id INT, IN _Category_Name VARCHAR(255))
BEGIN
    UPDATE medicine_category 
    SET Category_Name = _Category_Name
    WHERE Category_id = _Category_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateMedicineData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateMedicineData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateMedicineData`(IN _Medicine_id INT, IN _Medicine_name VARCHAR(250), IN _Category_id INT, IN _Medicine_Quantity INT, IN _Manufacture_date DATE, IN _Unit_Price INT)
BEGIN
    UPDATE medicine_db 
    SET Medicine_name = _Medicine_name, Category_id = _Category_id, Medicine_Quantity = _Medicine_Quantity, 
        Manufacture_date = _Manufacture_date, Unit_Price = _Unit_Price
    WHERE Medicine_id = _Medicine_id;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure UpdateOrderData
-- -----------------------------------------------------

USE `drug_project_cdac`;
DROP procedure IF EXISTS `UpdateOrderData`;
SHOW WARNINGS;

DELIMITER $$
USE `drug_project_cdac`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `UpdateOrderData`(IN _order_id INT, IN _meds_id INT, IN _pharms_id INT, IN _pharmacist_name VARCHAR(250), IN _Medicine_Name VARCHAR(250), IN _Price DOUBLE, IN _Order_Date DATETIME)
BEGIN
    UPDATE order_db 
    SET meds_id = _meds_id, pharms_id = _pharms_id, pharmacist_name = _pharmacist_name, Medicine_Name = _Medicine_Name, Price = _Price, Order_Date = _Order_Date
    WHERE order_id = _order_id;
END$$

DELIMITER ;
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
